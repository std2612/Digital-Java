트리거 : 데이터 무결성을 지킬 수 있다.
	=> 데이터의 무결성을 지키기 위해서 트리거 실행 후 추가적인 작업을 하지 않아도 된다.
	데이터의 일관성을 유지할 수 있다.

프로시저 : 이벤트가 발생했을 때 해당 이벤트를 안정적으로 동작할 수 있게 만들 수 있다.
	=> 이벤트가 발생했을 때 에러가 발생할 수 있다.
	insert의 경우 : 입력된 데이터 중 외래키가 있는 경우 해당 외래키는 다른 테이블에 있는 기본키이어야 하는데 다른 테이블에 해당 기본키가 없는 경우
	update의 경우 : 수정하려는 속성이 외래키인 경우 다른 테이블에 있는 기본키로 수정해야 하는데 없는 값으로 수정하려는 경우
	delete 경우 : 삭제하려는 데이터의 기본키가 다른 테이블의 외래키로 써 있는 경우
	- 테이블 A에서 이벤트가 발생해서 처리를 해야 하는데 처리해야 하는 테이블이 A인 경우 프로시저를 사용해야 한다.

DDL : 정의어 - 스키마/테이블을 추가/수정/삭제

DML : 조작어 - 데이터를 검색/추가/수정/삭제
	select 속성 from 테이블A join 테이블B on 속성a=속성b where 조건;

	insert into 테이블A[(속성1, 속성2)] values(속성1값, 속성2값);
	
	update 테이블A set 속성1=속성1값, 속성2=속성2값 where 조건;

	delete

DCL : 제어어